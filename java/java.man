运行含有 package 声明的程序
	
	$ tree
	.
	└── hello
		└── Hello.class

	1 directory, 1 file
	$ java hello.Hello

jar 包
    
    jar 包就是 zip 格式的包, 创建一个 zip 包, 把后缀改为 jar 即可

	$ jar fvt tmp.jar # 查看

	把 jar 包加入 classpath 并运行程序
    $ java -cp target/my-app-1.0-SNAPSHOT.jar com.mycompany.app.App

    若在 jar 包的 META-INF/MANIFEST.MF 中指定了 Main-Class, 就不必指定启动的类名
	$ java -jar tmp.jar # 直接执行程序

复杂编译命令

	$ tree
	.
	├── bin
	│   ├── hong
	│   └── ming
	└── src
		├── hong
		│   └── Person.java
		└── ming
			└── Person.java

	6 directories, 2 files
	$ cat src/hong/Person.java 
	package hong;
	public class Person {}
	$ cat src/ming/Person.java 
	package ming;
	public class Person {}
	$ javac -d bin src/hong/Person.java src/ming/Person.java 
	$ tree
	.
	├── bin
	│   ├── hong
	│   │   └── Person.class
	│   └── ming
	│       └── Person.class
	└── src
		├── hong
		│   └── Person.java
		└── ming
			└── Person.java

	6 directories, 4 files

import

java
|-- io
|   |-- InputStream
|   |-- OutputStream
|   |-- PrintWriter
|   `-- IOException
`-- util
    `-- Map

javax
`-- servlet
    |-- ServletContext
    |-- ServletConfig
    |-- http
    |   |-- HttpServletRequest
    |   |-- HttpServletResponse
    |   `-- HttpSession
    `-- jsp
        |-- JspWriter
        `-- PageContext
org
|-- slf4j
|   |-- Logger
|   `-- LoggerFactory
`-- apache
    `-- commons
        `-- httpclient
            |-- Header
            |-- HttpClient
            |-- NameValuePair
            `-- methods
                `-- PostMethod
