# ---------------- start and edit ----------------

vim						# start vim
vim <file>				# start vim opening the file(s)
vim + <file>			# edit file from last line
vim +n file				# edit file from nth line

:help <command>			# view help info about command
K						# search for manual on keyword

:n <file>				# new file
:e <file>				# edit file
:e ++enc=gbk <file>		# read file using encoding gbk
:n						# when starting vim with multiple files, use this
						# command to switch to next file

# ---------------- move the cursor ----------------

h						# left
j						# down
k						# up
l						# right

gj						# down on display lines (wrapped ones)
gk						# up on display lines (wrapped ones)

<space>					# to next character
<backspace>				# to prevous character

w						# to the beginning of next word
b						# to the beginning of previous word
e						# to the end of next word
W B E					# likewise, but use blank only to separate words

0 |						# to the beginning of current line
^						# to the first non-blank character of current line
$						# to the end of current line
+ <return>				# to the beginning of next line
-						# to the first non-blank character of prevous line

ngg						# to the nth line, default=1
nG						# to the nth line, default=lastline
:n						# to the nth line

H						# to the top of the screen
nH						# to the nth line of the screen
M						# to the middle of the screen
L						# to the bottom of the screen
nL						# to the last nth line of the screen

(						# to the beginning of the sentence
)						# to the end of the sentence
{						# to the beginning of the paragraph
}						# to the beginning of the next paragraph
[[						# to last '{'
]]						# to next '}'

# ---------------- insert ----------------

i						# enter insert mode from the left of the cursor
a						# enter insert mode from the right of the cursor
o						# open a new line below current line
O						# open a new line above current line
I						# insert from 0 (see above)
A						# append from $ (see above)
<esc>					# exit insert mode

# ---------------- delete ----------------

x						# delete the character under cursor
dd						# delete current line
D						# delete right-half line
d						# use with movement, for example:
dw						# delete to the end of the word, including blanks
de						# delete until the end of the word, without blanks
dG						# delete until the end of file
d <mouse>				# delete until the mouse selected character
:m,nd					# delete line m to n

# ---------------- replace, substitute, change ----------------

r						# next key typed will replace current character
R						# enter replace mode
ns						# delete n chars and enter insert mode
S						# delete current line and enter insert mode
c cc C					# equal to d dd D, then enter insert mode

# ---------------- find and replace ----------------

/<text>					# find text in file
?<text>					# find text in file backwards
f<char>					# find char in current line
F<char>					# find char in current line backwards
t<char> T<char>			# like f F, but the position of cursor differs

command

	:<range>s/txt1/txt2/<option>

discription

	replace txt1 with txt2

	<range>

		default	current line
		.		current line
		m,n		line m to n
		^		first line
		$		last line
		%		global

	<option>

		default	replace once
		g		replace all
		c		confirmed by user

examples

:<range>s/txt1/txt2/g	# replace all txt1 in range with txt2
:<range>s/txt1/txt2/gc	# likewise, but confirmed by user
:m,ns/txt1/txt2/g		# do replace from line m to line n

:g/txt/<command>		# execute command in all lines containing txt
:v/txt/<command>		# execute command in all lines not containing txt

# ---------------- copy and paste ----------------

nyy						# copy n lines. default n=1
p						# paste text after cursor
P						# paste text before cursor

"[a-z]<y or d or p>		# yank/delete/paste command with named register
:reg					# see registers

# ----------------  undo and repeat ----------------

u						# undo last change
U						# undo all changes on current line
ctrl-r					# redo the undoed change
.						# repeat last change
;						# repeat the F f T t command
,						# repeat the F f T t command backward
n						# repeat the / ? command
N						# repeat the / ? command backward
&						# repeat the :s command

# ---------------- save and exit ----------------

:w						# save file
:w <filename>			# save file as filename
:wq	:x ZZ				# save file and exit
:e!						# discard all changes
:q!						# discard all changes and exit

# ---------------- options ----------------

# NOTE: for more info, see ~/.vim/vimrc

:set all				# show all the options
:set no<option>			# the opposite of the option, for example,
						# :set nonu will close line numbers

# ---------------- info ----------------

:.=						# show current line number
:=						# show total line count
:f ctrl-g				# show filename, total line count and percentage
:l						# list blank chars on current line
g ctrl-g				# word statistics

# ---------------- mark ----------------

m[a-z]					# mark current position
'[a-z]					# move to the desired position

# ---------------- join ----------------

nJ						# join next n lines to current line. default=1

# ---------------- screen ----------------

ctrl-y					# scroll up a line
ctrl-e					# scroll down a line
ctrl-u					# scroll up half a page
ctrl-d					# scroll down half a page
ctrl-b					# page up
ctrl-f					# page down
ctrl-l					# refresh screen
z<return>				# top current line
z.						# center current line
z-						# bottom current line

# --------------- split window ------------------

:split <filename>		# split window by top and bottom
:vsplit <filename>		# split window by left and right
:new					# open new window by top and bottom
:vnew					# open new window by left and right
ctrl-w <hjkl>			# move to a window
ctrl-w <HJKL>			# move current window

# ---------------- shell ----------------

:! <command>			# execute shell command
:!!						# execute last shell command
:r file					# read file and append after current line
:nr file				# read file and append after nth line
:r! <command>			# read the output of command, e.g. :r!date
:w! <command>			# pass current file to command, e.g. :w!grep all
:cd <dir>				# change directory to dir
:sh						# temporarily enter shell environment
:so <file>				# ???

# ---------------- map and abbrevation ----------------

# NOTE: avoid functional keys like K V g q v * = . 

:map <key> <cmd_seq>	# map key to cmd_seq, e.g. :map fj <esc>
:map					# view all defined maps
:unmap <key>			# delete the defined map

:ab <str1> <str2>		# type in str1, press Esc, got str2
:ab						# view all defined abbrevations
:una str				# delete the defined abbrevation

# ---------------- indent ----------------

tab ctrl-i				# insert a tab if under insert mode
>>						# indent
n>>						# indent n lines
<<						# unindent
